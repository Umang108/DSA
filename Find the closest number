class Solution{
    public:
    int findClosest( int n, int k,int arr[]) 
    { 
        // Complete the function
        int left = 0, right = n - 1;
        int mid;
        while (left < right) {
            mid = left + (right - left) / 2;
            if (arr[mid] < k) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        if (left == 0) {
            return arr[left];
        }
        if (left == n) {
            return arr[left - 1];
        }

        int left_val = arr[left];
        int right_val = arr[left - 1];
        if (abs(left_val - k) < abs(right_val - k)) {
            return left_val;
        } else if (abs(left_val - k) > abs(right_val - k)) {
            return right_val;
        } else {
            return std::max(left_val, right_val);
        }
    } 
};
