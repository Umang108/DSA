lass Solution{
        pair<bool,int>isbalancefast(Node* root){
        if(root==NULL){
            pair<bool,int>p=make_pair(true, 0);
            return p;
        }
        pair<int,int>left=isbalancefast(root-> left);
        pair<int,int>right=isbalancefast(root-> right);

        bool leftAns=left.first;
        bool rightAns=right.first;

        bool diff = abs(left.second- right.second)<=1;
        pair<bool, int>ans;

        ans.second=max(left.second , right.second) +1;

        if(leftAns && rightAns && diff){
            ans.first=true;
        }
        else{
            ans.first=false;
        }
        return ans;
        
    }
    public:
    //Function to check whether a binary tree is balanced or not.
    bool isBalanced(Node *root)
    {
        //  Your Code here
        return isbalancefast(root).first;
    }
};
