bool areIdentical(struct Node *head1, struct Node *head2) {
    // Code here
    Node* current1 = head1;
    Node* current2 = head2;
    
    while (current1 != nullptr && current2 != nullptr) {
        // If data of both nodes is not equal, return false
        if (current1->data != current2->data) {
            return false;
        }
        // Move to the next nodes in both lists
        current1 = current1->next;
        current2 = current2->next;
    }
    

    return (current1 == nullptr && current2 == nullptr);
}

void printList(Node* head) {
    Node* current = head;
    while (current != nullptr) {
        cout << current->data << " ";
        current = current->next;
    }
    cout << endl;
}

Node* newNode(int data) {
    Node* temp = new Node(data);
    return temp;
}
