class Solution {
  public:
  
    const int MOD = 1e9 + 7;
    int countPartitions(int n, int d, vector<int>& arr) {

        int total_sum = std::accumulate(arr.begin(), arr.end(), 0);
        if ((total_sum + d) % 2 != 0) return 0;
        
        int target = (total_sum + d) / 2;
        if (target < 0) return 0;
        std::vector<int> dp(target + 1, 0);
        dp[0] = 1;  
        
        for (int num : arr) {
            for (int j = target; j >= num; --j) {
                dp[j] = (dp[j] + dp[j - num]) % MOD;
            }
        }
        
        return dp[target];
    }
};
