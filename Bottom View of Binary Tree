class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        if (!root) return {};
        map<int, int> hdNodeMap;
        
        queue<pair<Node*, int>> q;
        q.push({root, 0});
    
        while (!q.empty()) {
            auto front = q.front();
            q.pop();
    
            Node* node = front.first;
            int hd = front.second;
    
            hdNodeMap[hd] = node->data;
    
            if (node->left) {
                q.push({node->left, hd - 1});
            }
    
            if (node->right) {
                q.push({node->right, hd + 1});
            }
        }
    
        vector<int> result;
        for (const auto& pair : hdNodeMap) {
            result.push_back(pair.second);
        }
    
        return result;

    }
};
