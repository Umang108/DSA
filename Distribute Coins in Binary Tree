/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    int distributeCoins(TreeNode* root) {
        int moves = 0;
        dfs(root, moves);
        return moves;
    }

private:
    // Helper function to perform DFS and balance the coins
    int dfs(TreeNode* node, int& moves) {
        if (!node)
            return 0;

        int left_balance = dfs(node->left, moves);
        int right_balance = dfs(node->right, moves);

        int balance = node->val + left_balance + right_balance - 1;

        moves += abs(balance);

        return balance;
    }
};
