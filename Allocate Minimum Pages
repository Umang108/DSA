class Solution {
  public:
    bool ispossible(vector<int> arr, int n, int k, int mid) {
        int stcount = 1;  
        int pagecount = 0; 
        
        for(int i = 0; i < n; i++) {
            if(pagecount + arr[i] <= mid) {
                pagecount += arr[i]; 
            } else {
                stcount++;
                
                if(stcount > k || arr[i] > mid) {
                    return false;
                }
                pagecount = arr[i];  
            }
        }
        return true;
    }
  
    int findPages(vector<int> &arr, int k) {
        int n = arr.size();
        if(k > n) return -1;

        int s = *max_element(arr.begin(), arr.end());  
        int sum = accumulate(arr.begin(), arr.end(), 0);  
        int e = sum;  
        int ans = -1;
        while(s <= e) {
            int mid = s + (e - s) / 2;
            
            if(ispossible(arr, n, k, mid)) {
                ans = mid;  
                e = mid - 1;
            } else {
                s = mid + 1;  
                
            }
        }
        return ans;
    }
};
